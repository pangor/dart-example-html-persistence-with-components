// Auto-generated from index.html.
// DO NOT EDIT.

library test;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'person_fields.dart';
import '../persistable_html.dart';
import '../models.dart';
import 'package:web_ui/web_ui.dart';
import 'dart:html';


// Original code


// We need to get our database into memory and into
// something that can be observed.

final __changes = new __observe.Observable();

List<Person> __$people = toObservable([]);
List<Person> get people {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'people');
  }
  return __$people;
}
set people(List<Person> value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'people',
        __$people, value);
  }
  __$people = value;
}

Person __$newPerson = new Person();
Person get newPerson {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'newPerson');
  }
  return __$newPerson;
}
set newPerson(Person value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'newPerson',
        __$newPerson, value);
  }
  __$newPerson = value;
}

addPerson() {
  return newPerson.store().then((_) {
    people.add(newPerson);
    newPerson = new Person();
  })
  .catchError(print);
}

remove(Person p) {
  return p.delete().then((_) {
    people.remove(p);
  });
}

update(Person p) {
  return p.store().then((_) {
    query('#msg-${p.dbId}').text = 'Updated';
  });
}

clear() {
  return Persistable.clear().then((_) {
    people.clear();
  });
}

main() {
  init('test2', 'test2').then((_) {
    Persistable.all(Person).toList().then((List<Person> ps) {
      people.addAll(ps);
    });
  });
}
// Additional generated code
void init_autogenerated() {
  var __root = autogenerated.document.body;
  final __html0 = new autogenerated.Element.html('<li template="" repeat="p in people">\n        <div is="person-fields"></div>\n        <button>update</button>\n        <button>remove</button>\n        <span></span>\n      </li>');
  var __e0, __e1, __e7, __e8;
  var __t = new autogenerated.Template(__root);
  __e0 = __root.nodes[1].nodes[1];
  __t.oneWayBind(() => newPerson, (e) { if (__e0.xtag.person != e) __e0.xtag.person = e; }, false, false);
  __t.component(new PersonFields()..host = __e0);
  __e1 = __root.nodes[1].nodes[3];
  __t.listen(__e1.onClick, ($event) { addPerson(); });
  __e7 = __root.nodes[3].nodes[1];
  __t.loop(__e7, () => people, ($list, $index, __t) {
    var p = $list[$index];
    var __e2, __e3, __e4, __e5, __e6;
    __e6 = __html0.clone(true);
    __e2 = __e6.nodes[1];
    __t.oneWayBind(() => p, (e) { if (__e2.xtag.person != e) __e2.xtag.person = e; }, false, false);
    __t.component(new PersonFields()..host = __e2);
    __e3 = __e6.nodes[3];
    __t.listen(__e3.onClick, ($event) { update(p); });
    __e4 = __e6.nodes[5];
    __t.listen(__e4.onClick, ($event) { remove(p); });
    __e5 = __e6.nodes[7];
    __t.oneWayBind(() => 'msg-${p.dbId}', (e) { if (__e5.id != e) __e5.id = e; }, false, false);
  __t.add(__e6);
  });
  __e8 = __root.nodes[5].nodes[1];
  __t.listen(__e8.onClick, ($event) { clear(); });
  __t.create();
  __t.insert();
}

//# sourceMappingURL=index.dart.map